[{"E:\\deepti\\visual studio code\\React JS\\My React Practise Projects\\popular-tv-shows\\src\\index.js":"1","E:\\deepti\\visual studio code\\React JS\\My React Practise Projects\\popular-tv-shows\\src\\App.js":"2","E:\\deepti\\visual studio code\\React JS\\My React Practise Projects\\popular-tv-shows\\src\\client.js":"3","E:\\deepti\\visual studio code\\React JS\\My React Practise Projects\\popular-tv-shows\\src\\shows.js":"4","E:\\deepti\\visual studio code\\React JS\\My React Practise Projects\\popular-tv-shows\\src\\GenreCategory.js":"5","E:\\deepti\\visual studio code\\React JS\\My React Practise Projects\\popular-tv-shows\\src\\genreCategory.js":"6","E:\\deepti\\visual studio code\\React JS\\My React Practise Projects\\popular-tv-shows\\src\\modal.js":"7"},{"size":262,"mtime":1608232155404,"results":"8","hashOfConfig":"9"},{"size":2199,"mtime":1608477806325,"results":"10","hashOfConfig":"9"},{"size":207,"mtime":1607970612232,"results":"11","hashOfConfig":"9"},{"size":1258,"mtime":1608483191039,"results":"12","hashOfConfig":"9"},{"size":402,"mtime":1608312392163,"results":"13","hashOfConfig":"9"},{"size":367,"mtime":1608404384392,"results":"14","hashOfConfig":"9"},{"size":1335,"mtime":1608523803940,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1451fh9",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\deepti\\visual studio code\\React JS\\My React Practise Projects\\popular-tv-shows\\src\\index.js",[],["32","33"],"E:\\deepti\\visual studio code\\React JS\\My React Practise Projects\\popular-tv-shows\\src\\App.js",["34"],"import { useState,useEffect } from 'react'\nimport client from './client'\nimport Shows from './shows'\nimport GenreCategory from './genreCategory'\n\nfunction App() {\n  const [data,setData] = useState([]);\n  const [categorisedData,setCategorisedData] = useState([]);\n  const [loading,setLoading] = useState(true);\n  const [filter,setFilter] = useState('all');\n  const assignFilter = (newfilter) => {\n    setFilter(newfilter);\n  }\n  \n  const fetchData = async() => {\n      try {\n        const response = await client.getEntries({'content_type': 'popularTvShows'});\n        const responseData = await response.items;\n        const newData = responseData.map(item => {\n          return {\n            title: item.fields.title,\n            image: item.fields.image.fields.file.url,\n            year: item.fields.year,\n            description: item.fields.description,\n            genre: item.fields.genre\n          }\n        });\n        setData(newData);\n        setCategorisedData(data);\n        setLoading(false);\n      } \n      catch (error) {\n          console.log(error)\n      }\n    }\n  \n  // Loading data, runs once at page load\n  useEffect(() => {    \n    fetchData();\n    setCategorisedData(data);\n  }, [])\n\n  // Categorising data based on filter choosen\n  // runs whenever a filter is chosen\n  useEffect(() => {\n    if(filter === 'all'){\n      setCategorisedData(data);\n    }\n    else if(filter !== 'all'){\n      const newData = data.filter(item => item.genre.search(filter) !== -1);\n      setCategorisedData(newData);\n    }\n  }, [filter,data]);\n\n  if (loading){\n    return <h1>Loading...</h1>;\n  } else{  \n    const allGenre = ['all',...data.map(item => item.genre)];\n    let newAllGenre = [];\n    allGenre.forEach(item => {\n      newAllGenre.push(...item.split(', '));\n    });\n    newAllGenre = new Set(newAllGenre);\n\n    return (\n      <>\n        <h2>Popular tv shows</h2>\n        <main>\n          <div className=\"genreCategory\">\n            <GenreCategory allGenre={newAllGenre} assignFilter={assignFilter}/>\n          </div>\n          <div className=\"show-container\">\n            <Shows data={categorisedData} />\n          </div>\n        </main>    \n      </>\n    );\n  }\n}\n\nexport default App;\n","E:\\deepti\\visual studio code\\React JS\\My React Practise Projects\\popular-tv-shows\\src\\client.js",[],"E:\\deepti\\visual studio code\\React JS\\My React Practise Projects\\popular-tv-shows\\src\\shows.js",[],"E:\\deepti\\visual studio code\\React JS\\My React Practise Projects\\popular-tv-shows\\src\\GenreCategory.js",[],"E:\\deepti\\visual studio code\\React JS\\My React Practise Projects\\popular-tv-shows\\src\\genreCategory.js",[],"E:\\deepti\\visual studio code\\React JS\\My React Practise Projects\\popular-tv-shows\\src\\modal.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":41,"column":6,"nodeType":"41","endLine":41,"endColumn":8,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'fetchData'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCategorisedData' needs the current value of 'data'.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [data, fetchData]",{"range":"48","text":"49"},[1202,1204],"[data, fetchData]"]